<manifest
  xmlns:android="http://schemas.android.com/apk/res/android"
  package="com.example.unai_reminder"
  xmlns:tools="http://schemas.android.com/tools"
>
    <!-- The INTERNET permission is required for development. Specifically,
         the Flutter tool needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <application
    android:label="unai_reminder"
    android:icon="@mipmap/ic_launcher"
    android:allowBackup="false"
  >

        
         <activity
      android:name="io.flutter.embedding.android.FlutterActivity"
      android:launchMode="singleTop"
      android:theme="@style/LaunchTheme"
      android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
      android:hardwareAccelerated="true"
      android:windowSoftInputMode="adjustResize"
      android:showWhenLocked="true"
      android:turnScreenOn="true"
      android:exported="true"
    >
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
        android:name="io.flutter.embedding.android.NormalTheme"
        android:resource="@style/NormalTheme"
      />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data android:name="flutterEmbedding" android:value="2" />

        <!-- Add android:stopWithTask option only when necessary. -->
        <service
      android:name="com.pravera.flutter_foreground_task.service.ForegroundService"
      android:stopWithTask="true"
    />

      <receiver
      android:name=".BootReceiver"
      android:enabled="true"
      android:exported="true"
      android:permission="android.permission.RECEIVE_BOOT_COMPLETED"
    >
    <intent-filter>
            <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action
          android:name="android.intent.action.QUICKBOOT_POWERON"
        />
                <category android:name="android.intent.category.DEFAULT" />
    </intent-filter>
  </receiver>

<service
      android:name="dev.fluttercommunity.plus.androidalarmmanager.AlarmService"
      android:permission="android.permission.BIND_JOB_SERVICE"
      android:exported="false"
    />
<receiver
      android:name="dev.fluttercommunity.plus.androidalarmmanager.AlarmBroadcastReceiver"
      android:exported="false"
    />
<receiver
      android:name="dev.fluttercommunity.plus.androidalarmmanager.RebootBroadcastReceiver"
      android:enabled="false"
      android:exported="false"
    >
    <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED" />
    </intent-filter>
</receiver>

    </application>
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />


</manifest>
